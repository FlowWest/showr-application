plot_ly(x=~md, y=~parameter_value, color=~as.character(yr),
type='scatter', mode='lines')
shasta_storage_data %>%
mutate(yr = year(datetime), md = format(datetime, "%m-%d")) %>%
filter(yr %in% c(2017, 2015, 2014, 2018, 2013), parameter_id == 15) %>%
arrange(yr, datetime) %>%
plot_ly(x=~md, y=~parameter_value, color=~as.character(yr),
type='scatter', mode='lines')
shasta_storage_data %>%
mutate(yr = year(datetime), md = format(datetime, "%m-%d")) %>%
filter(yr %in% c(2017, 2015, 2014, 2018, 2013, 2012), parameter_id == 15) %>%
arrange(yr, datetime) %>%
plot_ly(x=~md, y=~parameter_value, color=~as.character(yr),
type='scatter', mode='lines')
shasta_storage_data %>%
mutate(yr = year(datetime), md = format(datetime, "%m-%d")) %>%
filter( parameter_id == 15) %>%
arrange(yr, datetime) %>%
plot_ly(x=~md, y=~parameter_value, color=~as.character(yr),
type='scatter', mode='lines')
tabsetPanel()
tabsetPanel(tabPanel(), tabPanel())
tabsetPanel(tabPanel(title = "Tab1"), tabPanel(title = "tab2"))
tabsetPanel(navbarMenu(title = "tab1"), tabPanel(title = "tab2"))
CDECRetrieve::cdec_datasets("sha")
:=
:=/
:=.
x := 2
library(rlang)
:=
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?navbarPage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Projects/sho-wr/sho-wr-application/modules/home-page.R')
runApp()
source('~/Projects/sho-wr/sho-wr-application/modules/home-page.R')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
station_code_to_name <- c(
"kwk" = "Keswick",
"ccr" = "Clear Creek",
"bsf" = "Balls Ferry",
"jlf" = "Jellys Ferry",
"bnd" = "Bend Bridge"
)
station_code_to_name['bsf']
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("greta")
t <- today()
lubridate::mday(t)
runApp()
runApp()
runApp()
runApp()
?shinyjs::disable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?updateSelectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
temp_data
runApp()
runApp()
temp_data
head(temp_data, 100) %>% View()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Sys.Date()
today(tzone = "America/Los_Angeles")
diversion_data <- read_csv("data/srsc_diversion_data.csv")
diversion_data
runApp()
runApp()
diversion_data
runApp()
runApp()
runApp()
runApp()
diversion_data
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rpart")
install.packages("randomforest")
install.packages("randomForest")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
station_code_to_name_temps <- c(
"kwk" = "Keswick",
"ccr" = "Clear Creek",
"bsf" = "Balls Ferry",
"jlf" = "Jellys Ferry",
"bnd" = "Bend Bridge",
"sha" = "Shasta"
)
station_code_to_name_flows <- c(
"kwk" = "Keswick Outflow",
"ccr" = "Clear Creek",
"bsf" = "Balls Ferry",
"jlf" = "Jellys Ferry",
"bnd" = "Bend Bridge",
"sha" = "Shasta Inflow"
)
runApp()
runApp()
runApp()
runApp()
config::get()
config::get("production")
x <- config::get("production")
x
cn <- DBI::dbConnect(
drv = RPostgreSQL::PostgreSQL(),
user = x$user,
host = x$host,
password = x$password,
port = x$port
dbname = x$dbname
)
cn <- DBI::dbConnect(
drv = RPostgreSQL::PostgreSQL(),
user = x$user,
host = x$host,
password = x$password,
port = x$port,
dbname = x$dbname
)
cn %>% tbl()
cn %>% src_tbls()
cn <- DBI::dbConnect(
drv = RPostgreSQL::PostgreSQL(),
user = x$user,
host = x$host,
password = x$password,
port = x$port,
dbname = x$dbname
)
cn %>% src_tbls()
?src_tbls
cn
cn@Id
database_transaction <- function(q, ...) {
tmp_conn <- dbConnect(
drv = RPostgreSQL::PostgreSQL(),
dbname = x$dbname,
host = x$host,
port = x$port,
user = x$user,
password = x$password
)
on.exit(dbDisconnect(tmp_conn))
query <- sqlInterpolate(tmp_conn, q, ...)
dbGetQuery(tmp_conn, query)
}
# query for carcass data
carcass_data <- database_transaction(
"select * from carcass_counts
where date_part('year', date) IN (2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)
and total_count >= 0;"
)
carcass_data
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
cold_water_pool_2018 <-
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
googlesheets::gs_read(ws = "2018")
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing")
library(googlesheets)
cold_water_pool_2018 <-
gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2017")
cold_water_pool_2018 <-
gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2017")
# library imports -----------------------------------------------------------------
library(shiny)
library(DBI)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(googlesheets)
cold_water_pool_2018 <-
gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2017")
gs_auth()
cold_water_pool_2018 <-
gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2017")
CDECRetrieve::cdec_datasets("sha")
library(CDECRetrieve)
sha_storage <- cdec_query("sha", "15", "h", "2018-01-01")
sha_elev <- cdec_query("sha", "6", "2018-01-01")
CDECRetrieve::cdec_datasets("sha") %>% View()
sha_storage <- cdec_query("sha", "15", "h", "2018-01-01")
sha_elev <- cdec_query("sha", "6", "h", "2018-01-01")
sha_elev
library(dplyr)
sha <- bind_rows(
sha_storage,
sha_elev
)
library(tidyr)
bind_rows(
sha_storage,
sha_elev
)
sha <- bind_rows(
sha_storage,
sha_elev
) %>%
spread(parameter_cd, parameter_value)
sha
sha <- bind_rows(
sha_storage,
sha_elev
) %>%
spread(parameter_cd, parameter_value) %>%
rename('storage' = `15`, "elevation" = `6`)
sha
sha %>%
ggplot(aes(storage, elevation)) + geom_point()
sha %>%
mutate(trans = storage / elevation)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018")
cold_water
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, dark_blue_elevation)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue)
cold_water
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date))
cold_water
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date))
cold_water
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines')
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~start_date, y=~storage, type='scatter', mode='lines', inherit = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~start_date, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~end_date, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, -elevation_dark_blue)
cold_water
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date)
cold_water
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018")
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date()-1, TRUE ~ end_date-1)) %>%
gather(date, value, start_date, end_date)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
Sys.Date() -1
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE) %>%
layout(yaxis = list(rangemode = "tozeroy"))
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date)
cold_water
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date) %>%
distinct(value, .keep_all = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE, fill=NULL)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date) %>%
distinct(value, .keep_all = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE, fill=NULL)
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2018") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date) %>%
distinct(value, .keep_all = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE, fill=NULL)
sha_storage <- cdec_query("sha", "15", "h", "2017-01-01", "2018-01-01")
cold_water <- gs_url("https://docs.google.com/spreadsheets/d/1fkl4RTjOADGNjgUD56HLKMdC0xd1olaw91PFbKiNY3s/edit?usp=sharing") %>%
gs_read(ws = "2017") %>%
distinct(start_date, end_date, .keep_all = TRUE) %>%
mutate(storage = elevation_dark_blue * 3151) %>%
select(start_date, end_date, elevation_dark_blue, storage) %>%
mutate(end_date = case_when(is.na(end_date) ~ Sys.Date(), TRUE ~ end_date)) %>%
gather(date, value, start_date, end_date) %>%
distinct(value, .keep_all = TRUE)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines+markers', inherit = TRUE, fill=NULL)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL)
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL,
markers = list(dash = "dash"))
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL,
line = list(dash = "dash"))
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL,
line = list(dash = "dash"), colors="red")
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL,
line = list(dash = "dash"), color="red")
plot_ly(data=sha_storage, x=~datetime, y=~parameter_value, type='scatter', mode='lines', fill='tozeroy') %>%
add_trace(data=cold_water, x=~value, y=~storage, type='scatter', mode='lines', inherit = TRUE, fill=NULL,
line = list(dash = "dash"))
flow_data <- readr::read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_hourly_flows.csv")
library(dplyr)
flow_data %>% filter(location_id == "bnd")
shiny::runApp()
runApp()
flow_data %>% filter(location_id == "wlk")
flow_data %>% filter(location_id == "wlk") %>% tail()
runApp()
runApp()
flow_data %>% filter(location_id == "wlk")
runApp()
flow_data %>% filter(location_id == "wlk")
flow_data %>% filter(location_id == "wlk")
flow_data %>% filter(location_id == "wlk") %>% tail()
runApp()
flow_data %>% distinct(location_id)
install.packages("sparkline")
install.packages("sparkline")
shiny::runApp()
flow_data %>% filter(location_id == "mss") %>% pull(parameter_value)
flow_data %>% filter(location_id == "mss") %>% pull(parameter_value) %>% sparkline()
flow_data %>% filter(location_id == "mss") %>% pull(parameter_value) %>% .[1:100] %>% sparkline()
flow_data %>% filter(location_id == "mss") %>% pull(parameter_value) %>% .[1] %>% sparkline()
flow_data %>% filter(location_id == "mss") %>% pull(parameter_value) %>% .[1:40] %>% sparkline()
runApp()
