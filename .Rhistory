hatching_accum,
hatching_day = hatching_accum > 100) %>%
ungroup() %>%
group_by(redd_id) %>%
mutate(
flag = cumsum(hatching_day),
hatching_day = date[which(flag == 1)],
hatching_day_bool = date == hatching_day,
has_hatched = date >= hatching_day
) %>% ungroup()
rd_with_hatching
redd_hatching <- function(temp) {
log(0.08646) + (1.23473 * log(temp + 2.26721))
}
rd %>%
filter(year(date) == 2016) %>%
group_by(redd_id) %>%
mutate(hatching_devel = redd_hatching(daily_mean),
hatching_accum = cumsum(hatching_devel))
shiny::runApp()
runApp()
shiny::runApp()
x <- read_rds("../showr-application/data/chinook/aerial-survey-observations_no_error_codes.rds")
x
x %>% distinct(location)
runApp()
isothermal_data
runApp()
isothermal_data <- read_rds("data/operations/shasta_storage_temperature.rds")
isothermal_data
runApp()
runApp()
isothermal_data %>% tail()
runApp()
iso_color_coded <- isothermal_data %>%
mutate(temp_code = case_when(
(temp <= 48) ~ "dark blue",
(temp > 48 & temp <= 52) ~ "blue",
(temp > 52 & temp <= 56) ~ "cyan",
(temp > 56 & temp <= 60) ~ "green",
(temp > 60 & temp <= 66) ~ "baige",
(temp > 66 & temp <= 70) ~ "orange",
(temp > 70) ~ "red",
TRUE ~ as.character(NA)
),
temp_code = factor(temp_code, levels = c("dark blue", "blue", "cyan",
"green", "baige", "orange",
"red")))
iso_color_coded
isothermal_data <- read_rds("data/operations/shasta_storage_temperature2.rds")
iso_color_coded <- isothermal_data %>%
mutate(temp_code = case_when(
(temp <= 48) ~ "dark blue",
(temp > 48 & temp <= 52) ~ "blue",
(temp > 52 & temp <= 56) ~ "cyan",
(temp > 56 & temp <= 60) ~ "green",
(temp > 60 & temp <= 66) ~ "baige",
(temp > 66 & temp <= 70) ~ "orange",
(temp > 70) ~ "red",
TRUE ~ as.character(NA)
),
temp_code = factor(temp_code, levels = c("dark blue", "blue", "cyan",
"green", "baige", "orange",
"red")))
iso_color_coded
iso_color_coded %>%
group_by(date, temp_code) %>%
summarise(total_storage_in_bin = sum(volume_taf)) %>% ungroup() %>%
mutate(volume_af = total_storage_in_bin * 1000) %>%
arrange(date, temp_code) %>%
group_by(date) %>%
mutate(accum_volume = cumsum(volume_af)) %>% ungroup()
isothermal_data2 <- read_rds("data/operations/shasta_storage_temperature.rds")
isothermal_data2
isothermal_data
runApp()
View(isothermal_data)
View(isothermal_data2)
isothermal_data2 <- read_rds("data/operations/shasta_storage_temperature2.rds")
runApp()
runApp()
runApp()
runApp()
runApp()
CDECRetrieve::cdec_datasets("d16")
runApp()
redd_data
redd_data <-
read_rds("data/chinook/aerial-survey-observations_no_error_codes.rds") %>%
filter(race %in% c("Winter", "Fall"))
redd_data
library(lubridate)
redd_data %>%
filter(year(date) == 2017)
redd_17 <- redd_data %>%
filter(year(date) == 2017)
redd_17
400 * 12
redd_17
redd_17 %>%
group_by(date, race) %>%
summarise(
total = sum(counts)
)
redd_17 %>%
group_by(date, race) %>%
summarise(
total = sum(counts, na.rm = TRUE)
)
redd_17 %>%
group_by(date, race) %>%
summarise(
total = sum(counts, na.rm = TRUE)
) %>%
plot_ly() %>%
add_bars(x=~date, y=~total)
rd
rd %>%
filter(year(date) == 2017)
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~count)
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts)
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts, color=~location)
r17
redd17
redd_17
r <- redd_17 %>%
filter(race == "Fall")
r
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts, color=~location) %>%
add_trace(data=r, x=~date, y=~counts, mode='lines')
r <- redd_17 %>%
filter(race == "Fall") %>%
group_by(date) %>%
summarise(total = sum(counts, na.rm = TRUE))
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts, color=~location) %>%
add_trace(data=r, x=~date, y=~counts, mode='lines')
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts, color=~location) %>%
add_trace(data=r, x=~date, y=~total, mode='lines')
rd %>%
filter(year(date) == 2017) %>%
plot_ly() %>%
add_bars(x=~date, y=~counts, color=~location) %>%
add_trace(data=r, x=~date, y=~total, mode='markers')
400 * 12
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
isothermal_data
runApp()
isothermal_data <- read_rds("data/operations/shasta_storage_temperature2.rds")
isothermal_data
runApp()
isothermal_data
runApp()
runApp()
125-113
runApp()
shiny::runApp()
install.packages("waterYearType")
waterYearType::water_year_indices
waterYearType::water_year_indices %>% filter(location == "Sacramento Valley")
waterYearType::water_year_indices %>% filter(location == "Sacramento Valley") %>% tail()
waterYearType::water_year_indices %>% filter(location == "Sacramento Valley") %>% View()
CDECRetrieve::sac_valley_wy_types
historic_water_year_types <-
readr::read_rds("data/operations/historical-water-year-index.rds") %>%
tibble::add_row(year =2017, yr_type="W")
historic_water_year_types
current_water_year_types <-
readr::read_rds("data/operations/2018-04-17-water-year-index.rds")
current_water_year_types
current_water_year_types <-
readr::read_rds("data/operations/2018-04-17-water-year-index.rds")
current_water_year_types
historic_water_year_types
current_water_year_types
get_year_classification <- function(y) {
if (y != year(today())) {
historic_water_year_types %>%
filter(year == y) %>%
mutate(classification = wy_class_lookups[yr_type]) %>%
pull(classification) %>%
as.character()
} else {
# current_water_year_types %>%
#   filter(probability == 99) %>%
#   arrange(desc(date)) %>%
#   head(1) %>%
#   pull(classification) %>%
#   as.character()
"below normal"
}
}
get_year_classification(1999)
get_year_classification(2014)
library(rvest)
url <- "http://cdec.water.ca.gov/reportapp/javareports?name=WSIHIST"
library(tidyverse)
url %>%
read_html()
url %>%
read_html() %>%
html_nodes("pre")
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text()
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n")
?tail
x <- 1:10
tail(5)
tail(-5)
tail(x)
tail(x, 5)
tail(x, -5)
head(x, -5)
tail(x, 5)
x
tail(x, 2)
tail(x, -2)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n")
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
tail(-15)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
flatten() %>%
tail(-15)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
flatten()
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n")
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist()
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-15)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-15) %>%
head(122)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-15) %>%
head(118)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-15) %>%
head(118) -> x
x
x[1]
strsplit(x, " ")
strsplit(x, "\t")
strsplit(x[1], "\t")
strsplit(x[1], " ")
library(lubridate)
library(stringr)
strsplit(x[1], " ")
str_detect(str_split(x[1], " "), "")
str_split(x[1], " ")
t <- str_split(x[1], " ")
flatten(t)
unlist(t)
t
str_detect(unlist(t), "")
t[str_detect(unlist(t), "")]
t[!str_detect(unlist(t), "")]
t[[1]][!str_detect(unlist(t), "")]
t[[1]][str_detect(unlist(t), "")]
flatten_chr(t)
t
tt <- flatten_chr(t)
tt
tt[str_detect(tt, "")]
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-15)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(118)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(117)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) %>%
map_df(function(x) {
split_row <- flatten_chr(str_split(x, " "))
split_row <- split_row[str_detect(split_row, "")]
tibble(
water_year = split_row[1],
sacramento_class = split_row[6],
san_joaquin_class = split_row[11]
)
})
34 * 12
34 * 11
34 * 10
shiny::runApp()
url <- "http://cdec.water.ca.gov/reportapp/javareports?name=WSIHIST"
library(rvest)
url %>%
read_html() %>%
html_nodes("pre")
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text()
library(stringr)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n")
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
tail(-20) %>%
head(132)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
tail(-20)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n")
x <- 1:10
head(1)
x %>% head(2)
x %>% head(4)
x %>% tail(4)
x %>% tail(-4)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(132)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112)
library(tidyverse)
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) -> y
y[1]
str_split(y[1], " ")
flatten_chr(str_split(y[1], " "))
str_detect(flatten_chr(str_split(y[1], " ")), "")
n <- flatten_chr(str_split(y[1], " "))
n
n[str_detect(n, "")]
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) %>%
map_df(function(x) {
split_row <- flatten_chr(str_split(x, " "))
split_row <- split_row[str_detect(split_row, "")]
tibble(
water_year = split_row[1],
sac_valley_class = split_row[6],
san_joaquin_class = split_row[11]
)
})
current_water_year_classifications <- url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) %>%
map_df(function(x) {
split_row <- flatten_chr(str_split(x, " "))
split_row <- split_row[str_detect(split_row, "")]
tibble(
water_year = split_row[1],
sac_valley_class = split_row[6],
san_joaquin_class = split_row[11]
)
})
current_water_year_classifications
write_rds(current_water_year_classifications, "data/operations/current_water_year_classifications.rds")
historic_water_year_types <-
readr::read_rds("data/operations/current_water_year_classifications.rds")
historic_water_year_types
runApp()
runApp()
x <- read_rds("data/operations/historical-water-year-index.rds")
x
historic_water_year_types
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
