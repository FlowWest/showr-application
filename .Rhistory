n
n[str_detect(n, "")]
url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) %>%
map_df(function(x) {
split_row <- flatten_chr(str_split(x, " "))
split_row <- split_row[str_detect(split_row, "")]
tibble(
water_year = split_row[1],
sac_valley_class = split_row[6],
san_joaquin_class = split_row[11]
)
})
current_water_year_classifications <- url %>%
read_html() %>%
html_nodes("pre") %>%
html_text() %>%
str_split("\n") %>%
unlist() %>%
tail(-20) %>%
head(112) %>%
map_df(function(x) {
split_row <- flatten_chr(str_split(x, " "))
split_row <- split_row[str_detect(split_row, "")]
tibble(
water_year = split_row[1],
sac_valley_class = split_row[6],
san_joaquin_class = split_row[11]
)
})
current_water_year_classifications
write_rds(current_water_year_classifications, "data/operations/current_water_year_classifications.rds")
historic_water_year_types <-
readr::read_rds("data/operations/current_water_year_classifications.rds")
historic_water_year_types
runApp()
runApp()
x <- read_rds("data/operations/historical-water-year-index.rds")
x
historic_water_year_types
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
install.packages("shinycssloaders")
library(shinycssloaders)
?withSpinner
runApp()
runApp()
shiny::runApp()
historic_water_year_types
historic_water_year_types %>% tail()
historic_water_year_types %>% add_row("water_year" = 2018, "sac_valley_class"="BN", "san_joaquin_class"=NA)
historic_water_year_types %>% add_row("water_year" = 2018, "sac_valley_class"="BN", "san_joaquin_class"=NA) %>% tail()
runApp()
shasta_storage_data
shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
)
shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
group_by(water_year) %>%
summarise(
peak_storage = max(parameter_value)
)
shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value))
shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value)
)
shasta_storage_data %>% filter(datetime == "2010-05-22")
CDECRetrieve::cdec_datasets("sha")
CDECRetrieve::cdec_datasets("sha") %>% tail()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value)
)
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime)
)
shasta_storage_data %>%
filter(parameter_id == "15", datetime == "2010-05-22")
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = day(date)
)
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
)
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(day_of_year, peak)) + geom_point()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(water_year, peak_storage)) + geom_bar()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(water_year, peak_storage)) + geom_col()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(water_year, peak)) + geom_col()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(as.character(water_year), peak)) + geom_col()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(as.character(water_year), peak, color=day_of_year)) + geom_col()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(as.character(water_year), peak, fill=day_of_year)) + geom_col()
library(readxl)
fish_counts_raw <- read_xlsx("~/Downloads/MASTER_DATA_ENTRY_ALL_STATIONS_2018-2019_as_of_2-28-2019.xlsx",
sheet = 2,
skip = 6)
fish_counts_raw
fish_counts_raw <- read_xlsx("~/Downloads/MASTER_DATA_ENTRY_ALL_STATIONS_2018-2019_as_of_2-28-2019.xlsx",
sheet = 2,
skip = 5)
fish_counts_raw
fish_counts_raw
fish_counts_raw %>%
transmute(
date = Date,
start_time = `Start Time`,
up_salmon = `UP Salmon`,
dn_salmon = `DN Salmon`,
up_jacks_ls_24 = `UP Jacks less 24"`,
dn_jacks_ls_24 = `DN Jacks less 24"`,
up_steel_gt_16 = `UP Steel >16"`,
dn_steel_gt_16 = `DN Steel >16"`,
up_trout_lt_16 = `UP Trout less 16"`,
dn_trout = `DN Trout`
)
fish_counts <- fish_counts_raw %>%
transmute(
date = Date,
start_time = `Start Time`,
up_salmon = `UP Salmon`,
dn_salmon = `DN Salmon`,
up_jacks_ls_24 = `UP Jacks less 24"`,
dn_jacks_ls_24 = `DN Jacks less 24"`,
up_steel_gt_16 = `UP Steel >16"`,
dn_steel_gt_16 = `DN Steel >16"`,
up_trout_lt_16 = `UP Trout less 16"`,
dn_trout = `DN Trout`
)
fish_counts
fish_counts
fish_counts %>%
filter(up_salmon > 0)
fish_counts
fish_counts %>%
filter(up_salmon > 0)
shiny::runApp()
shasta_storage_data
CDECRetrieve::cdec_datasets("sha")
shasta_storage_data %>%
filter(parameter_id == "15")
sha_storage <- shasta_storage_data %>%
filter(parameter_id == "15")
sha_storage_19 <-
sha_storage %>% filter(year(datetime) == 2019)
sha_storage_19
sha_storage_19 %>%
ggplot(aes(datetime, parameter_value)) + geom_line()
sha_storage_19 %>%
mutate(
accum = cumsum(parameter_value)
)
sha_storage_19 %>%
mutate(
accum = cumsum(parameter_value)
) %>%
ggplot(aes(datetime, accum)) + geom_line()
sha_storage_19 %>%
ggplot(aes(datetime, parameter_value)) + geom_line()
sha_storage_19 %>% mutate(lag(parameter_value))
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value))
) %>%
ggplot(aes(datetime, daily_value)) + geom_line()
sha_storage <- shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
filter(parameter_id == "15")
sha_storage
sha_storage_19 <-
sha_storage %>% filter(year(datetime) == 2019)
sha_storage_19
sha_storage_19 <-
sha_storage %>% filter(water_year == 2019)
sha_storage_19
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value))
) %>%
ggplot(aes(datetime, daily_value)) + geom_line()
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value)),
accum = cumsum(daily_value)
)
sha_storage_19 %>%
mutate(
daily_value = (lag(parameter_value) - parameter_value),
accum = cumsum(daily_value)
)
CDECRetrieve::cdec_datasets("sha")
CDECRetrieve::cdec_datasets("sha") %>% View
sha_storage
sha_storage %>% mutate(lag(parameter_value))
sha <- CDECRetrieve::cdec_query("sha", "22", "d", "2018-10-01")
sha
install.packages("shinythemes")
shiny::runApp()
install.packages("shinytoastr")
runApp()
runApp()
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rgdal")
install.packages("rgdal")
install.packages(c("dplyr", "fs", "ggthemes", "hexbin", "pillar", "processx", "progress", "rcmdcheck", "tinytex", "xfun"))
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
install.packages("rgdal", dependencies = TRUE)
install.packages("rgdal", dependencies = TRUE)
shiny::runApp()
shiny::runApp()
rsconnect::appDependencies()
shiny::runApp()
diversion_data
diversion_data %>% tail()
write_rds(diversion_data, "../showrMBK/data-raw/historical-diversions.rds")
runApp()
shiny::runApp()
runApp()
371 + 25
871+25
shiny::runApp()
runApp()
runApp()
runApp()
model_temps <- read_csv("data/temperatures/cvtemp/sim_run_20150529.csv") %>%
filter(model_type == "usbr_no_w2",
scenario_name == "may_23_2018_input_90_output_90_50l3mto")
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
model_temps <- read_csv("data/temperatures/cvtemp/sim_run_20150529.csv") %>%
filter(model_type == "usbr_no_w2",
scenario_name == "may_23_2018_input_90_output_90_50l3mto")
model_temps
model_temps %>% colnames()
model_temps %>% colnames() %>% dput()
model_temps %>% arrange(datetime)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
upstream_diversions <- read_rds("data/flows/upstream-diversions-2019-05-28.rds")
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
upstream_diversions <- read_rds("data/flows/upstream-diversions-2019-05-28.rds")
downstream_diversions <- read_rds("data/flows/downstream-diversions-2019-05-28.rds")
runApp()
runApp()
runApp()
diversion_data
runApp()
