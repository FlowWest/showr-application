mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location)))
runApp()
chosen_temp_data <-
temp_data %>%
filter(year(datetime) >= as.numeric(2017)) %>%
group_by(location_id, date = as_date(datetime)) %>%
summarise(
daily_mean = mean(parameter_value, na.rm = TRUE)
)
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location)))
runApp()
chosen_temp_data <-
temp_data %>%
filter(year(datetime) >= as.numeric(2017)) %>%
group_by(location_id, date = as_date(datetime)) %>%
summarise(
daily_mean = mean(parameter_value, na.rm = TRUE)
)
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location)))
chosen_temp_data <-
temp_data %>%
filter(year(datetime) >= as.numeric(2017)) %>%
group_by(location_id, date = as_date(datetime)) %>%
summarise(
daily_mean = mean(parameter_value, na.rm = TRUE)
)
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$spawn_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$spawn_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup()
chosen_temp_data
chosen_temp_data %>% filter(location_id == "kwk")
chosen_temp_data %>% filter(location_id == "ccr")
chosen_temp_data %>% filter(location_id == "bnd")
chosen_temp_data %>% filter(location_id == "bsf")
source('~/.active-rstudio-document', echo=TRUE)
chosen_temp_data <-
temp_data %>%
filter(year(datetime) >= as.numeric(2017)) %>%
group_by(location_id, date = as_date(datetime)) %>%
summarise(
daily_mean = mean(parameter_value, na.rm = TRUE)
) %>% ungroup()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup()
temp_data %>%
filter(year(datetime) >= as.numeric(2017))
temp_data %>%
filter(year(datetime) >= as.numeric(2017)) %>% tail()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup() %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location),
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= estimate_emergence(.$date, .$location)), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= estimate_emergence(.$date, .$location)), date)
}
)) %>% ungroup()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0)
estimate_emergence("2017-08-03", "ACID Dam to Highway 44 Bridge")
redd_cdec_lookup["ACID Dam to Highway 44 Bridge"]
chosen_temp_data %>% filter(location_id == "kwk", date >= "2017-08-03", date <= "2017-09-06")
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergece = estimate_emergence(.$date, .$location)
)) %>% ungroup()
runApp()
runApp()
runApp()
runApp()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup() %>%
DT::datatable()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup() %>%
distinct(spawn_id, .keep_all = TRUE) %>%
select(`Spawn Date` = spawn_date,
`Location` = spawn_location,
`Total Redds` = spawn_total,
`Estimated Emergence` = estimated_emergence)
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup() %>%
distinct(spawn_id, .keep_all = TRUE) %>%
select(`Spawn Date` = spawn_date,
`Location` = spawn_location,
`Total Redds` = spawn_total,
`Estimated Emergence` = estimated_emergence) %>%
DT::datatable(data=.,
options = list(
order = list(list(0, 'desc'))
))
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup() %>%
distinct(spawn_id, .keep_all = TRUE) %>%
select(`Spawn Date` = spawn_date,
`Location` = spawn_location,
`Total Redds` = spawn_total,
`Estimated Emergence` = estimated_emergence) %>%
DT::datatable(data=.,
options = list(
order = list(list(0, 'desc')),
dom = 't'
))
runApp()
redd_data %>%
filter(year(date) == as.numeric(2017),
counts > 0) %>%
rowwise() %>%
do(tibble(
spawn_date = as_date(.$date),
spawn_location = .$location,
spawn_total = .$counts,
cdec_location = redd_cdec_lookup[.$location],
estimated_emergence = estimate_emergence(.$date, .$location)
)) %>% ungroup()  %>%
left_join(chosen_temp_data, by = c("spawn_date" = "date", "cdec_location" = "location_id")) %>%
mutate(spawn_id = as.character(group_indices(., spawn_date, spawn_location))) %>%
ungroup() %>%
rowwise() %>%
do(
tibble(
spawn_id = .$spawn_id,
spawn_date = .$spawn_date,
spawn_location = .$spawn_location,
spawn_total = .$spawn_total,
cdec_location = .$cdec_location,
estimated_emergence = .$estimated_emergence,
daily_temp = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), daily_mean)
},
temp_date = {
pull(filter(chosen_temp_data, location_id == .$cdec_location,
date >= .$spawn_date, date <= .$estimated_emergence), date)
}
)
) %>% ungroup() %>%
distinct(spawn_id, .keep_all = TRUE) %>%
select(`Spawn Date` = spawn_date,
`Location` = spawn_location,
`Total Redds` = spawn_total,
`Estimated Emergence` = estimated_emergence) %>%
DT::datatable(data=.,
extensions = c("Scroller"),
options = list(
order = list(list(0, 'desc')),
dom = 't',
deferRender = TRUE,
scrollY = 200,
scroller = TRUE
))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- 1:10
x <- c("one", "two", "three")
x
x[-"one"]
x[-c("one")]
x[-which(x == "one")]
runApp()
runApp()
