shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(as.character(water_year), peak, color=day_of_year)) + geom_col()
shasta_storage_data %>%
filter(parameter_id == "15") %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
arrange(water_year, desc(parameter_value)) %>%
group_by(water_year) %>%
summarise(
peak = first(parameter_value),
date = first(datetime),
day_of_year = lubridate::yday(date)
) %>%
ggplot(aes(as.character(water_year), peak, fill=day_of_year)) + geom_col()
library(readxl)
fish_counts_raw <- read_xlsx("~/Downloads/MASTER_DATA_ENTRY_ALL_STATIONS_2018-2019_as_of_2-28-2019.xlsx",
sheet = 2,
skip = 6)
fish_counts_raw
fish_counts_raw <- read_xlsx("~/Downloads/MASTER_DATA_ENTRY_ALL_STATIONS_2018-2019_as_of_2-28-2019.xlsx",
sheet = 2,
skip = 5)
fish_counts_raw
fish_counts_raw
fish_counts_raw %>%
transmute(
date = Date,
start_time = `Start Time`,
up_salmon = `UP Salmon`,
dn_salmon = `DN Salmon`,
up_jacks_ls_24 = `UP Jacks less 24"`,
dn_jacks_ls_24 = `DN Jacks less 24"`,
up_steel_gt_16 = `UP Steel >16"`,
dn_steel_gt_16 = `DN Steel >16"`,
up_trout_lt_16 = `UP Trout less 16"`,
dn_trout = `DN Trout`
)
fish_counts <- fish_counts_raw %>%
transmute(
date = Date,
start_time = `Start Time`,
up_salmon = `UP Salmon`,
dn_salmon = `DN Salmon`,
up_jacks_ls_24 = `UP Jacks less 24"`,
dn_jacks_ls_24 = `DN Jacks less 24"`,
up_steel_gt_16 = `UP Steel >16"`,
dn_steel_gt_16 = `DN Steel >16"`,
up_trout_lt_16 = `UP Trout less 16"`,
dn_trout = `DN Trout`
)
fish_counts
fish_counts
fish_counts %>%
filter(up_salmon > 0)
fish_counts
fish_counts %>%
filter(up_salmon > 0)
shiny::runApp()
shasta_storage_data
CDECRetrieve::cdec_datasets("sha")
shasta_storage_data %>%
filter(parameter_id == "15")
sha_storage <- shasta_storage_data %>%
filter(parameter_id == "15")
sha_storage_19 <-
sha_storage %>% filter(year(datetime) == 2019)
sha_storage_19
sha_storage_19 %>%
ggplot(aes(datetime, parameter_value)) + geom_line()
sha_storage_19 %>%
mutate(
accum = cumsum(parameter_value)
)
sha_storage_19 %>%
mutate(
accum = cumsum(parameter_value)
) %>%
ggplot(aes(datetime, accum)) + geom_line()
sha_storage_19 %>%
ggplot(aes(datetime, parameter_value)) + geom_line()
sha_storage_19 %>% mutate(lag(parameter_value))
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value))
) %>%
ggplot(aes(datetime, daily_value)) + geom_line()
sha_storage <- shasta_storage_data %>%
mutate(
water_year = case_when(
month(datetime) %in% 10:12 ~ year(datetime) + 1,
TRUE ~ year(datetime)
)
) %>%
filter(parameter_id == "15")
sha_storage
sha_storage_19 <-
sha_storage %>% filter(year(datetime) == 2019)
sha_storage_19
sha_storage_19 <-
sha_storage %>% filter(water_year == 2019)
sha_storage_19
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value))
) %>%
ggplot(aes(datetime, daily_value)) + geom_line()
sha_storage_19 %>%
mutate(
daily_value = (parameter_value - lag(parameter_value)),
accum = cumsum(daily_value)
)
sha_storage_19 %>%
mutate(
daily_value = (lag(parameter_value) - parameter_value),
accum = cumsum(daily_value)
)
CDECRetrieve::cdec_datasets("sha")
CDECRetrieve::cdec_datasets("sha") %>% View
sha_storage
sha_storage %>% mutate(lag(parameter_value))
sha <- CDECRetrieve::cdec_query("sha", "22", "d", "2018-10-01")
sha
install.packages("shinythemes")
shiny::runApp()
install.packages("shinytoastr")
runApp()
runApp()
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rgdal")
install.packages("rgdal")
install.packages(c("dplyr", "fs", "ggthemes", "hexbin", "pillar", "processx", "progress", "rcmdcheck", "tinytex", "xfun"))
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
install.packages("rgdal", dependencies = TRUE)
install.packages("rgdal", dependencies = TRUE)
shiny::runApp()
shiny::runApp()
rsconnect::appDependencies()
shiny::runApp()
diversion_data
diversion_data %>% tail()
write_rds(diversion_data, "../showrMBK/data-raw/historical-diversions.rds")
runApp()
shiny::runApp()
runApp()
371 + 25
871+25
shiny::runApp()
runApp()
runApp()
runApp()
model_temps <- read_csv("data/temperatures/cvtemp/sim_run_20150529.csv") %>%
filter(model_type == "usbr_no_w2",
scenario_name == "may_23_2018_input_90_output_90_50l3mto")
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
model_temps <- read_csv("data/temperatures/cvtemp/sim_run_20150529.csv") %>%
filter(model_type == "usbr_no_w2",
scenario_name == "may_23_2018_input_90_output_90_50l3mto")
model_temps
model_temps %>% colnames()
model_temps %>% colnames() %>% dput()
model_temps %>% arrange(datetime)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
upstream_diversions <- read_rds("data/flows/upstream-diversions-2019-05-28.rds")
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
upstream_diversions <- read_rds("data/flows/upstream-diversions-2019-05-28.rds")
downstream_diversions <- read_rds("data/flows/downstream-diversions-2019-05-28.rds")
runApp()
runApp()
runApp()
diversion_data
runApp()
shiny::runApp()
install.packages(c("digest", "evaluate", "knitr", "measurements", "pillar", "progress", "raster", "reprex", "rgdal", "rmarkdown", "rvest", "tibble", "zoo"))
shiny::runApp()
runApp()
?add_lines
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
diversion_data
runApp()
runApp()
runApp()
runApp()
set.seed(1)
x <- 1:10
sample(x, 1)
#> [1] 3
sample(x, 1)
#> [1] 4
x
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
?sample
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
sample(x, 1)
dplyr::sample_n(data.frame(1:10))
dplyr::sample_n(data.frame(x=1:10))
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
dplyr::sample_n(data.frame(x=1:10), 2)
redd_data <-
read_rds("data/chinook/winter-run-redds-2019-05-31.rds") %>%
filter(race == "Winter")
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(DT)
library(leaflet)
library(rgdal)
library(zoo)
library(stringr)
library(readr)
library(tidyr)
library(forcats)
library(readr)
library(sparkline)
library(shinyjs)
library(measurements)
library(purrr)
library(shinytoastr)
library(shinyWidgets)
library(shinycssloaders)
redd_data <-
read_rds("data/chinook/winter-run-redds-2019-05-31.rds") %>%
filter(race == "Winter")
redd_data
runApp()
runApp()
model_temps <- read_csv("data/temperatures/cvtemp/sim_run_2019-05-24.csv")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
capabilities()
shiny::runApp()
1836 + 300 + 400
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?save
shiny::runApp()
runApp()
runApp()
shiny::runApp()
9000/125
72/3
shiny::runApp()
runApp()
runApp()
shiny::runApp()
redd_data <-
read_rds("data/chinook/2019-08-02-redd-counts.rds") %>%
filter(race == "Winter")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages(c("shiny",
"plotly",
"dplyr",
"lubridate",
"DT",
"leaflet",
"rgdal",
"zoo",
"stringr",
"readr",
"tidyr",
"forcats",
"readr",
"sparkline",
"shinyjs",
"measurements",
"purrr",
"shinytoastr",
"shinyWidgets",
"shinycssloaders"))
library(shiny)
library(shiny)
library(shiny)
install.packages(c("plotly",
"dplyr",
"lubridate",
"DT",
"leaflet",
"rgdal",
"zoo",
"stringr",
"readr",
"tidyr",
"forcats",
"readr",
"sparkline",
"shinyjs",
"measurements",
"purrr",
"shinytoastr",
"shinyWidgets",
"shinycssloaders"))
library(shiny)
install.packages("shiny")
install.packages("httpuv")
install.packages("httpuv")
install.packages("shiny")
install.packages(c("plotly",
"dplyr",
"lubridate",
"DT",
"leaflet",
"rgdal",
"zoo",
"stringr",
"readr",
"tidyr",
"forcats",
"readr",
"sparkline",
"shinyjs",
"measurements",
"purrr",
"shinytoastr",
"shinyWidgets",
"shinycssloaders"))
shiny::runApp()
# These data are all on a public S3 bucket
temp_data <-
read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_hourly_temps.csv",
col_types = cols(
datetime = col_datetime(format = ""),
location_id = col_character(),
parameter_id = col_integer(),
parameter_value = col_double()
))
temp_compliance_points_daily_mean <-
read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_tempatures.csv",
col_types = cols(
datetime = col_date(format = ""),
location_id = col_character(),
parameter_id = col_integer(),
parameter_value = col_double()
))
# These data are all on a public S3 bucket
temp_data <-
read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_hourly_temps.csv",
col_types = cols(
datetime = col_datetime(format = ""),
location_id = col_character(),
parameter_id = col_integer(),
parameter_value = col_double()
))
runApp()
redd_air_temp <-
read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_daily_max_air_temp.csv",
col_types = cols(
location_id = col_character(),
parameter_id = col_integer(),
datetime = col_datetime(format = ""),
parameter_value = col_integer()
))
redd_air_temp
shasta_storage_data <-
read_csv("https://s3-us-west-2.amazonaws.com/showr-data-site/showr_ops.csv",
col_types = cols(
datetime = col_date(format = ""),
location_id = col_character(),
parameter_id = col_integer(),
parameter_value = col_double()
))
shasta_storage_data
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
